{
  "identifier": "co.gwil.deno",
  "name": "Deno",
  "organization": "Sam Gwilym",
  "description": "Everything you need for TypeScript and JavaScript development.",
  "version": "1.5.1",
  "categories": [
    "languages",
    "formatters",
    "issues",
    "completions",
    "tasks",
    "commands",
    "sidebars"
  ],
  "repository": "https://github.com/sgwilym/nova-deno",
  "bugs": "https://github.com/sgwilym/nova-deno/issues",

  "main": "main.js",

  "entitlements": {
    "process": true,
    "filesystem": "readwrite"
  },

  "funding": "https://github.com/sponsors/sgwilym",

  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:tsx",
    "onLanguage:javascript",
    "onLanguage:jsx"
  ],

  "config": [
    {
      "key": "co.gwil.deno.config.formatOnSave",
      "title": "Format document on save",
      "description": "Use Deno's built-in formatter to format files when they are saved.",
      "type": "boolean",
      "default": true
    }
  ],

  "configWorkspace": [
    {
      "key": "deno.enable",
      "title": "Enable Deno features",
      "type": "boolean",
      "description": "Use this to disable the usage of Deno with specific projects. This option will be overriden by the 'Enable paths' and 'Disabled paths' options.",
      "default": true
    },
    {
      "key": "deno.unstable",
      "title": "Support unstable Deno APIs",
      "type": "boolean",
      "default": false
    },
    {
      "key": "deno.lint",
      "title": "Enable linting",
      "description": "Turn on Deno's built-in linting.",
      "type": "boolean",
      "default": true
    },
    {
      "key": "co.gwil.deno.config.formatOnSave",
      "title": "Format document on save",
      "description": "Use Deno's built-in formatter to format files when they are saved. Requires Deno 1.37.",
      "type": "enum",
      "values": [
        ["null", "Inherit from Global Settings"],
        ["false", "Disable"],
        ["true", "Enable"]
      ],
      "default": "null"
    },
    {
      "key": "deno.cacheOnSave",
      "title": "Cache dependencies on save",
      "description": "Automatically cache dependencies when a file is saved.",
      "type": "boolean",
      "default": true
    },
    {
      "key": "deno.importMap",
      "title": "Import map",
      "link": "https://deno.land/manual/linking_to_external_code/import_maps",
      "description": "Load import map file from local file or remote URL. Automatically detected in the deno.json as of Deno 1.20.",
      "type": "string"
    },
    {
      "key": "deno.suggest.completeFunctionCalls",
      "title": "Complete function calls",
      "description": "Whether to include parentheses and argument placeholders when selecting an autocomplete option for a function whose signature is known.",
      "type": "boolean",
      "default": false
    },
    {
      "title": "Import suggestions",
      "type": "section",
      "description": "Deno is able to provide completions for URL imports. Because remote servers could provide false suggestions in an attempty to get you to run untrusted code, you must explicitly indicate trust for each registry. Putting the same registry in both of these sections will lead to unexpected results!",
      "children": [
        {
          "key": "co.gwil.deno.config.trustedImportHosts",
          "title": "Trusted hosts",
          "type": "stringArray"
        },
        {
          "key": "co.gwil.deno.config.untrustedImportHosts",
          "title": "Untrusted hosts",
          "type": "stringArray"
        }
      ]
    },
    {
      "title": "Performance settings",
      "type": "section",
      "description": "Advanced settings which may improve the performance of Deno's LSP server.",
      "children": [
        {
          "key": "co.gwil.deno.config.documentPreloadLimit",
          "title": "Document preload limit",
          "type": "number",
          "description": "The number of file system entries to for the LSP to preload.",
          "min": 0
        },
        {
          "key": "co.gwil.deno.config.maxTsServerMemory",
          "title": "TypeScript isolate memory limit",
          "type": "number",
          "description": "The maximum amount of memory the language server's internal TypeScript isolate is permitted to occupy.",
          "min": 0
        }
      ]
    }
  ],

  "sidebars": [
    {
      "id": "co.gwil.deno.sidebars.symbols",
      "name": "Deno Symbols",
      "placeholderText": "Use the Find Symbol command to find symbols with Deno.",
      "largeImage": "sidebar_large",
      "smallImage": "sidebar_small",
      "sections": [
        {
          "id": "co.gwil.deno.sidebars.symbols.sections.1",
          "name": "Symbols",
          "headerCommands": [
            {
              "title": "Find",
              "command": "co.gwil.deno.sidebars.symbols.commands.find"
            }
          ]
        }
      ]
    }
  ],

  "commands": {
    "editor": [
      {
        "title": "Format Document",
        "command": "co.gwil.deno.commands.formatDocument",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Rename Symbol",
        "command": "co.gwil.deno.commands.rename",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Find Symbol",
        "command": "co.gwil.deno.commands.find",
        "when": "shouldDisplayFeatures"
      },
      {
        "title": "Cache dependencies",
        "command": "co.gwil.deno.commands.cache",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Reload Import Registries",
        "command": "co.gwil.deno.commands.reloadImportRegistries",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Restart Deno LSP server",
        "command": "co.gwil.deno.commands.restartServer"
      }
    ]
  }
}
